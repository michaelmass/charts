{{- if .Values.deployment.enabled }}
### Based on https://github.com/bitnami/charts/blob/main/template/CHART_NAME/templates/deployment.yaml
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  {{- $deploymentLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.deployment.labels .Values.common.labels ) "context" . ) }}
  {{- $deploymentAnnotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.deployment.annotations .Values.common.annotations ) "context" . ) }}
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $deploymentLabels "context" $ ) | nindent 4 }}
  {{- if .Values.common.annotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $deploymentAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.pod.labels .Values.common.labels ) "context" . ) }}
  {{- $podAnnotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.pod.annotations .Values.common.annotations ) "context" . ) }}
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
  {{- if .Values.deployment.strategy }}
  strategy:  {{- include "common.tplvalues.render" (dict "value" .Values.deployment.strategy "context" $ ) | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
      {{- if $podAnnotations }}
      annotations: {{- include "common.tplvalues.render" ( dict "value" $podAnnotations "context" $ ) | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- if .Values.pod.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.pod.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.pod.affinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.pod.antiAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.pod.nodeAffinityPreset.type "key" .Values.pod.nodeAffinityPreset.key "values" .Values.pod.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.pod.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.pod.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.pod.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.pod.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.pod.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.pod.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.pod.securityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.pod.securityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.pod.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.pod.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.pod.initContainers }}
      initContainers: {{- include "common.tplvalues.render" (dict "value" .Values.pod.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ template "common.names.fullname" . }}
          image: {{ include "common.images.image" (dict "imageRoot" .Values.pod.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.pod.image.pullPolicy }}
          {{- if .Values.pod.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.pod.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.pod.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.pod.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.pod.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.pod.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: foo
              value: bar
            {{- if .Values.pod.env.vars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.pod.env.vars "context" $) | nindent 12 }}
            {{- end }}
          {{- if (or .Values.pod.env.configmap .Values.pod.env.secret) }}
          envFrom:
            {{- if .Values.pod.env.configmap }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.pod.env.configmap "context" $) }}
            {{- end }}
            {{- if .Values.pod.env.secret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.pod.env.secret "context" $) }}
            {{- end }}
          {{- end }}
          {{- if .Values.pod.resources }}
          resources: {{- toYaml .Values.pod.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.pod.containerPorts }}
          ports:
            {{- if .Values.pod.containerPorts.http }}
            - name: http
              containerPort: {{ .Values.pod.containerPorts.http }}
            {{- end }}
            {{- if .Values.pod.containerPorts.https }}
            - name: https
              containerPort: {{ .Values.pod.containerPorts.https }}
            {{- end }}
          {{- end }}
          {{- if .Values.pod.probes.liveness.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.pod.probes.liveness "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.pod.probes.readiness.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.pod.probes.readiness "enabled") "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.pod.probes.startup.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.pod.probes.startup "enabled") "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.pod.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.pod.sidecars "context" $) | nindent 8 }}
        {{- end }}
{{- end }}
